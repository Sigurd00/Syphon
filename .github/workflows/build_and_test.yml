name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Test on ${{ matrix.os }} with ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: macos-latest
            compiler: msvc
          - os: windows-latest
            compiler: clang
          - os: ubuntu-latest
            compiler: msvc

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Compiler setup (Linux/macOS)
      - name: Install Compiler (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y ${{ matrix.compiler }} cmake ninja-build

      - name: Install Compiler (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install ${{ matrix.compiler }} cmake ninja

      # Compiler setup (Windows)
      - name: Setup MSVC (Windows)
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install vcpkg (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install gtest

      # Google Test setup (Linux/macOS)
      - name: Install Google Test (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p third_party && cd third_party
          git clone --depth=1 https://github.com/google/googletest.git
          cd googletest
          cmake -B build -DCMAKE_INSTALL_PREFIX=/usr/local
          cmake --build build --target install

      - name: Configure CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -G Ninja

      - name: Build Project
        run: cmake --build build

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure
